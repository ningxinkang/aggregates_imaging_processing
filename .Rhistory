data(acidosis.patients)
de <- acidosis.patients
ds <- na.omit(ds)
ds <- acidosis.patients
View(de)
ds <- acidosis.patients
ds <- scale(ds)
distance <- get_dist(ds, method = "euclidean")
fviz_dist(distance, order=FALSE, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
k2 <- kmeans(ds, centers = 2, nstart = 25)
str(k2)
fviz_cluster(k2, data = ds)
k3 <- kmeans(ds, centers = 3, nstart = 25)
k4 <- kmeans(ds, centers = 4, nstart = 25)
k5 <- kmeans(ds, centers = 5, nstart = 25)
grid.arrange(p1, p2, p3, p4, nrow = 2)
p1 <- fviz_cluster(k2, geom = "point", data = ds) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = ds) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = ds) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = ds) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2) # arrange plots on a grid
set.seed(123)
fviz_nbclust(ds, kmeans, method = "wss")
fviz_nbclust(ds, kmeans, method = "silhouette")
final <- kmeans(ds, 3, nstart = 25)
print(final)
fviz_cluster(final, data = ds)
acidosis.patients %>%
mutate(Cluster = final$cluster) %>%
group_by(Cluster) %>%
summarise_all("mean")
fviz_cluster(final, data = ds)
d <- dist(ds, method = "euclidean")
hc1 <- hclust(d, method = "complete")
plot(hc1, cex = 0.6, hang = -1)
hc2 <- agnes(ds, method = "complete")
hc2$ac # Agglomerative coefficient
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
ac <- function(x) {
agnes(ds, method = x)$ac
}
map_dbl(m, ac)
hc3 <- agnes(ds, method = "ward")
pltree(hc3, cex = 0.6, hang = -1, main = "Dendrogram of agnes")
hc4 <- diana(ds)
hc4$dc # Divisive coefficient
pltree(hc4, cex = 0.6, hang = -1, main = "Dendrogram of diana") #plot dendrogram
hc5 <- hclust(d, method = "ward.D2") # Ward's method
sub_grp <- cutree(hc5, k = 3)        # Cut tree into 3 groups
table(sub_grp)
plot(hc5, cex = 0.6)
rect.hclust(hc5, k = 3, border = 2:4)
hc_a <- agnes(ds, method = "ward")
cutree(as.hclust(hc_a), k = 3)
hc_d <- diana(ds)
cutree(as.hclust(hc_d), k = 3)
ls
ls()
ls()
for i in F_head1 F_head2 F_midgut1 F_midgut2
do
printf "STAR
--runThreadN 20
--genomeDir /Desktop/hw3/genome_STARidx
--readFilesIn ${i}_clean_R1.fq ${i}_clean_R2.fq
--outSAMtype BAM SortedByCoordinate
--outFileNamePrefix ./${i}_STAR_genome" > ${i}_STAR.sh
bash ${i}_STAR.sh
done
sri<-read.csv("SraRunInfo.csv", stringsAsFactors=FALSE)
files<-basename(sri$download_path)
for(i in 1:length(files)) download.file(sri$download_path[i], files[i])
fast-dump SRR9018159.sra
getwd
getwd()
setwd(Desktop)
setwd("Desktop")
ls()
getwd()
ls
setwd("dn")
fast-dump --split-3 SRR9018159.sra
fast-dump SRR9018159.sra
fast-dump SRR9018159
fastq-dump -I --split-3 SRR948800.sra -O ./
fastq-dump -I --split-3 SRR9018159.sra -O ./
fastq-dump -I --split-3 SRR9018159.sra
export PATH=$PATH:/sratoolkit.2.4.1-centos_linux64/bin
fastq-dump -I --split-3 SRR9018159.sra
fast-dump
fasq-dump
fastq-dump
setwd("sratoolkit.2.10.3-centos_linux64")
setwd("bin")
fastq-dump
install.packages("tidyverse")
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
library("plyranges")
library("dplyr")
library("TxDb.Hsapiens.UCSC.hg38.knownGene")
library("ChIPseeker")
library("org.Hs.eg.db")
#load the TxDb
txdb.hg38ucsc <- TxDb.Hsapiens.UCSC.hg38.knownGene
txdb.hg38ucsc
#load the enhancer regions
enhancer.TSS.hg38 <- as.data.frame(read.table("enhancer.TSS.hg38.bed",header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
names(enhancer.TSS.hg38)[1] <- "seqnames"
names(enhancer.TSS.hg38)[2] <- "start"
names(enhancer.TSS.hg38)[3] <- "end"
# Convert to 3 column bed
enhancer.TSS.hg38.ranges <- plyranges::as_granges(enhancer.TSS.hg38[,c(1:3)])
enhancer.TSS.hg38.ranges
#load the enhancer regions
enhancer.TSS.hg38 <- as.data.frame(read.table("enhancer.TSS.hg38.bed",header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
#load the enhancer regions
enhancer.TSS.hg38 <- as.data.frame(read.table("enhancer.TSS.hg38.bed",header = FALSE, sep="\t",stringsAsFactors=FALSE, quote=""))
setwd("~/Desktop/Chen Lab/hek cells")
setwd("~/Desktop/Chen Lab/hek cells")
GFP <- read.csv("input/GFP.csv", stringsAsFactors=FALSE)
View(GFP)
GFP <- read.csv("input/GFP.csv", stringsAsFactors=FALSE)
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1)
# load the library
library(ggplot2)
library(ggpubr)
library(patchwork)
library(rlang)
source("script/summarySE.R")
GFP <- read.csv("input/GFP.csv", stringsAsFactors=FALSE)
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1)
sample_summary <-
summarySE(GFP,
measurevar="Area", groupvars=c("category"))
View(summarySE)
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "feature",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,ylim)+
ylab(ytitle)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
is_outlier <- function(x) {
#print(x)
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
View(sample_summary)
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "feature",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,ylim)+
ylab(ytitle)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "feature",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,NA)+
ylab("ytitle")+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
num_agg_3
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "Area",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,NA)+
ylab("ytitle")+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
num_agg_3
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "Area",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
#geom_text(aes(label = outlier), na.rm = TRUE, vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,NA)+
ylab("ytitle")+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
num_agg_3
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
GFP %>%
mutate(outlier = ifelse(is_outlier(Area), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "Area",
#add = "jitter",
color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
#geom_text(aes(label = outlier), na.rm = TRUE, vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,NA)+
ylab("ytitle")+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
num_agg_3
###1######################################
## 1. Average area of single aggregates##
###1######################################
dir_per_pic = "input/v2/agg_per_pic.csv"
dir_per_mouse = "input/v2/agg_per_mouse.csv"
ytitle = "Number of aggregates"
ylim = 350
feature="num_aggregates"
path_output = "result/v3/"
# load the library
library(ggplot2)
library(ggpubr)
library(patchwork)
library(rlang)
source("script/summarySE.R")
is_outlier <- function(x) {
#print(x)
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
plot_data <-
function(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output) {
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1)
per_pic <-
read.csv(dir_per_pic, stringsAsFactors=FALSE)
colnames(per_pic)[grep(feature, colnames(per_pic))] <- "feature"
per_mouse <-
read.csv(dir_per_mouse, stringsAsFactors=FALSE)
colnames(per_mouse)[grep(feature, colnames(per_mouse))] <- "feature"
sample_summary <-
summarySE(per_pic,
measurevar="feature", groupvars=c("mouse_id","category"))
colnames(sample_summary)[grep(feature, colnames(sample_summary))] <- "feature"
category_summary <-
summarySE(per_pic,
measurevar="feature", groupvars=c("category"))
colnames(category_summary)[grep(feature, colnames(category_summary))] <- "feature"
# Draw number of aggregates per picture
num_agg_1 <-
# select outliers
per_pic %>%
mutate(outlier = ifelse(is_outlier(feature), picture_id, as.numeric(NA))) %>%
# Add error bars and mean value to the graph
ggplot(aes(x=mouse_id, y=feature, color = category)) +
# Using standard error when drawing error bar
geom_errorbar(data = sample_summary, color = "black",
aes(ymin=feature-se, ymax=feature+se),
width=.1, position=pd)+
geom_point(position=pd)+
# add mean value
stat_summary(fun=mean, geom="point", shape=20, size=2, color="black", fill="black") +
# split channel for each categories
facet_grid(~category,scales = 'free_x')+
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,ylim)+
ylab(ytitle)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 2/1,
axis.text.x = element_text(angle = 15, size = 7, vjust = 0.5, hjust = 0.75)
)
# draw the number of aggregates per mouse
num_agg_2 <-
per_mouse %>%
mutate(outlier = ifelse(is_outlier(feature), mouse_id, as.numeric(NA))) %>%
# Add error bars and mean value to the graph
ggplot(aes(x = category, y = feature, color = category)) +
# Using standard error when drawing error bar
geom_errorbar(data = category_summary, color = "black",
aes(ymin = feature - se, ymax = feature + se),
width = .1, position = pd)+
geom_point(position = pd) +
# add mean value
stat_summary(fun= mean, geom= "point", shape= 20, size= 2, color="black", fill="red") +
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# edit on the features
ylim(0,ylim)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
ylab(ytitle)+
theme(legend.position = "none",
aspect.ratio = 3/1
)
# draw the number of aggregates per mouse
num_agg_3 <-
# select outliers
per_pic %>%
mutate(outlier = ifelse(is_outlier(feature), picture_id, as.numeric(NA))) %>%
ggboxplot(x = "category",y = "feature",
add = "jitter", color = "category")+
# add t-test
# diff bet t-test and wilcox
stat_compare_means(method = "t.test")+
# add mean value
stat_summary(fun = mean, geom = "point", shape = 20, size = 2, color="black", fill="black") +
# label the outlier
geom_text(aes(label = outlier), na.rm = TRUE,
vjust = 1.5, size = 2, color = "black")+
# manege theme and y-axis
ylim(0,ylim)+
ylab(ytitle)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
theme(
legend.position = "none",
aspect.ratio = 3/1
)
# make two plots side-by-side
num_agg_1 + num_agg_2 + num_agg_3
ggsave(path = path_output, filename = name_output,width = 13, height = 8, device='png', dpi=700)
}
###1######################################
## 1. Average area of single aggregates##
###1######################################
dir_per_pic = "input/v2/agg_per_pic.csv"
dir_per_mouse = "input/v2/agg_per_mouse.csv"
ytitle = "Number of aggregates"
ylim = 350
feature="num_aggregates"
path_output = "result/v3/"
name_output = "avg_num_agg.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
###6###############################################
## 6. Total Area per DAPI of aggregates one plate##
###6###############################################
dir_per_pic = "input/area_vs_DAPI_per_pic.csv"
dir_per_mouse = "input/area_vs_DAPI_per_mouse.csv"
ytitle = "Total area of aggregates/DAPI"
ylim = 27
feature="area_vs_DAPI"
path_output = "result/v3/"
name_output = "area_per_DAPI.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
###6###############################################
## 6. Total Area per DAPI of aggregates one plate##
###6###############################################
dir_per_pic = "input/v2/area_vs_DAPI_per_pic.csv"
dir_per_mouse = "input/v2/area_vs_DAPI_per_mouse.csv"
ytitle = "Total area of aggregates/DAPI"
ylim = 27
feature="area_vs_DAPI"
path_output = "result/v3/"
name_output = "area_per_DAPI.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
per_pic <-
read.csv(dir_per_pic, stringsAsFactors=FALSE)
colnames(per_pic)[grep(feature, colnames(per_pic))] <- "feature"
per_mouse <-
read.csv(dir_per_mouse, stringsAsFactors=FALSE)
colnames(per_mouse)[grep(feature, colnames(per_mouse))] <- "feature"
sample_summary <-
summarySE(per_pic,
measurevar="feature", groupvars=c("mouse_id","category"))
View(sample_summary)
View(per_pic)
###6###############################################
## 6. Total Area per DAPI of aggregates one plate##
###6###############################################
dir_per_pic = "input/v2/area_vs_DAPI_per_pic.csv"
dir_per_mouse = "input/v2/area_vs_DAPI_per_mouse.csv"
ytitle = "Total area of aggregates/DAPI"
ylim = 27
feature="Area_vs_DAPI"
path_output = "result/v3/"
name_output = "area_per_DAPI.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
ylim = 5
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
ylim = 4
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
###7#################################################
## 7. Total IntDen per DAPI of aggregates one plate##
###7#################################################
dir_per_pic = "input/v2/IntDen_vs_DAPI_per_pic.csv"
dir_per_mouse = "input/v2/IntDen_vs_DAPI_per_mouse.csv"
ytitle = "Total integrated density of aggregates/DAPI"
ylim = NA
feature="IntDen_vs_DAPI"
path_output = "result/v3/"
name_output = "IntDen_per_DAPI.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
ylim = 9e07
ylim = 9e-07
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
###2######################################
## 2. Average area of single aggregates##
###2######################################
dir_per_pic = "input/v2/avg_area_per_pic.csv"
dir_per_mouse = "input/v2/avg_area_per_mouse.csv"
ytitle = "Area (square micrometers)"
ylim = 55
feature="Area"
path_output = "result/v3/"
name_output = "avg_single_area.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
###8#################################################
## 8. Total number per DAPI of aggregates on plate###
###8#################################################
dir_per_pic = "input/v2/agg_vs_DAPI_per_pic.csv"
dir_per_mouse = "input/v2/agg_vs_DAPI_per_mouse.csv"
ytitle = "Total number of aggregates/DAPI"
ylim = NA
feature="num_aggregates_vs_DAPI"
path_output = "result/v3/"
name_output = "agg_per_DAPI.png"
plot_data(dir_per_pic, dir_per_mouse, ytitle, ylim, feature, path_output, name_output)
